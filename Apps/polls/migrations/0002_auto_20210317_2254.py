# Generated by Django 3.0 on 2021-03-17 22:54

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('polls', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TCycurricula',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=32)),
                ('timebegin', models.IntegerField(blank=True, db_column='TimeBegin')),
                ('timeend', models.IntegerField(blank=True, db_column='TimeEnd')),
                ('attr', models.IntegerField(blank=True, db_column='Attr')),
                ('charge', models.IntegerField(blank=True, db_column='Charge')),
                ('pwaccess', models.IntegerField(blank=True, db_column='PwAccess')),
                ('pwcontinuous', models.IntegerField(blank=True, db_column='PwContinuous')),
                ('pwdirection', models.IntegerField(blank=True, db_column='PwDirection')),
                ('dooropen', models.IntegerField(blank=True, db_column='DoorOpen')),
                ('timebegincheckbegin', models.IntegerField(blank=True, db_column='TimeBeginCheckBegin')),
                ('timebegincheckend', models.IntegerField(blank=True, db_column='TimeBeginCheckEnd')),
                ('timeendcheckbegin', models.IntegerField(blank=True, db_column='TimeEndCheckBegin')),
                ('timeendcheckend', models.IntegerField(blank=True, db_column='TimeEndCheckEnd')),
                ('rangeusers', models.CharField(blank=True, db_column='RangeUsers', max_length=1024)),
                ('listdepts', models.CharField(blank=True, db_column='ListDepts', max_length=1024)),
                ('rangeequs', models.CharField(blank=True, db_column='RangeEqus', max_length=1024)),
                ('listplaces', models.CharField(blank=True, db_column='ListPlaces', max_length=1024)),
                ('mapuser2equ', models.CharField(blank=True, db_column='MapUser2Equ', max_length=1024)),
                ('aboutspeaker', models.CharField(blank=True, db_column='AboutSpeaker', max_length=1024)),
                ('rem', models.CharField(blank=True, db_column='Rem', max_length=1024)),
                ('timeupdate', models.IntegerField(blank=True, db_column='TimeUpdate')),
                ('imark', models.IntegerField(db_column='IMark', default=1)),
                ('bakc_up1', models.CharField(blank=True, default='1', max_length=254)),
                ('back_up2', models.IntegerField(blank=True, default=1)),
                ('back_up3', models.IntegerField(default=1)),
            ],
            options={
                'db_table': 't_cycurricula',
            },
        ),
        migrations.CreateModel(
            name='TCydept',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('id_parent', models.IntegerField(db_column='ID_Parent')),
                ('name', models.CharField(db_column='Name', max_length=32)),
                ('timeupdate', models.IntegerField(db_column='TimeUpdate')),
                ('idmanager', models.IntegerField(db_column='IdManager')),
                ('imark', models.IntegerField(db_column='IMark', default=1)),
                ('bakc_up1', models.CharField(blank=True, default='1', max_length=254)),
                ('back_up2', models.IntegerField(blank=True, default=1)),
            ],
            options={
                'db_table': 't_cydept',
            },
        ),
        migrations.CreateModel(
            name='TCylocation',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='ID', primary_key=True, serialize=False)),
                ('id_parent', models.IntegerField(blank=True, db_column='ID_Parent')),
                ('name', models.CharField(blank=True, db_column='Name', max_length=32)),
                ('timeupdate', models.IntegerField(blank=True, db_column='TimeUpdate', default=1)),
                ('imark', models.IntegerField(db_column='IMark', default=1)),
                ('back_up1', models.CharField(blank=True, default='1', max_length=254)),
                ('back_up2', models.IntegerField(blank=True, default=1)),
                ('back_up3', models.IntegerField(default=1)),
            ],
            options={
                'db_table': 't_cylocation',
            },
        ),
        migrations.CreateModel(
            name='TCyplan',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='ID', primary_key=True, serialize=False)),
                ('timebegin', models.IntegerField(blank=True, db_column='TimeBegin')),
                ('timeend', models.IntegerField(blank=True, db_column='TimeEnd')),
                ('attr', models.IntegerField(blank=True, db_column='Attr')),
                ('charge', models.IntegerField(blank=True, db_column='Charge')),
                ('pwaccess', models.IntegerField(blank=True, db_column='PwAccess')),
                ('pwcontinuous', models.IntegerField(blank=True, db_column='PwContinuous')),
                ('pwdirection', models.IntegerField(blank=True, db_column='PwDirection')),
                ('dooropen', models.IntegerField(blank=True, db_column='DoorOpen')),
                ('timebegincheckbegin', models.IntegerField(blank=True, db_column='TimeBeginCheckBegin')),
                ('timebegincheckend', models.IntegerField(blank=True, db_column='imeBeginCheckEnd')),
                ('timeendcheckbegin', models.IntegerField(blank=True, db_column='TimeEndCheckBegin')),
                ('timeendcheckend', models.IntegerField(blank=True, db_column='TimeEndCheckEnd')),
                ('rangeusers', models.CharField(blank=True, db_column='RangeUsers', max_length=1024)),
                ('listdepts', models.CharField(blank=True, db_column='ListDepts', max_length=1024)),
                ('rangeequs', models.CharField(blank=True, db_column='RangeEqus', max_length=1024)),
                ('listplaces', models.CharField(blank=True, db_column='ListPlaces', max_length=1024)),
                ('mapuser2equ', models.CharField(blank=True, db_column='MapUser2Equ', max_length=1024)),
                ('aboutspeaker', models.CharField(blank=True, db_column='AboutSpeaker', max_length=1024)),
                ('rem', models.CharField(blank=True, db_column='Rem', max_length=1024)),
                ('timeupdate', models.IntegerField(blank=True, db_column='TimeUpdate')),
                ('imark', models.IntegerField(db_column='IMark', default=1)),
                ('back_up1', models.CharField(blank=True, default='1', max_length=254)),
                ('back_up2', models.CharField(blank=True, default='1', max_length=254)),
                ('back_up3', models.IntegerField(blank=True, default=1)),
                ('back_up4', models.IntegerField(default=1)),
                ('id_curricula', models.OneToOneField(db_column='ID_Curricula', on_delete=django.db.models.deletion.CASCADE, related_name='plan_related_to_curricula', to='polls.TCycurricula')),
                ('id_location', models.OneToOneField(db_column='ID_Location', on_delete=django.db.models.deletion.CASCADE, related_name='plan_related_to_location', to='polls.TCylocation')),
            ],
            options={
                'db_table': 't_cyplan',
            },
        ),
        migrations.CreateModel(
            name='TCyuser',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('nocard', models.CharField(db_column='Nocard', max_length=32)),
                ('nouser', models.CharField(db_column='NoUser', max_length=32)),
                ('name', models.CharField(db_column='Name', max_length=32)),
                ('psw', models.CharField(db_column='Psw', max_length=32)),
                ('sex', models.IntegerField(db_column='Sex')),
                ('attr', models.IntegerField(db_column='Attr')),
                ('attrjf', models.IntegerField(db_column='AttrJf', default=1)),
                ('yue', models.IntegerField(db_column='Yue', default=1)),
                ('yue2', models.IntegerField(db_column='Yue2', default=1)),
                ('timeupdate', models.IntegerField(db_column='TimeUpdate')),
                ('idmanager', models.IntegerField(blank=True, db_column='IdManager')),
                ('localid', models.CharField(db_column='LocalID', max_length=1024)),
                ('imark', models.IntegerField(db_column='IMark', default=1)),
                ('back_up2', models.CharField(blank=True, default='1', max_length=254)),
                ('back_up3', models.IntegerField(blank=True, default=1)),
                ('back_up4', models.IntegerField(default=1)),
                ('deptid', models.OneToOneField(db_column='Deptid', on_delete=django.db.models.deletion.CASCADE, related_name='related_to_department', to='polls.TCydept')),
            ],
            options={
                'db_table': 't_cyuser',
            },
        ),
        migrations.CreateModel(
            name='TCyTableInfo',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=50)),
                ('nametable', models.CharField(db_column='NameTable', max_length=50)),
                ('timeupdate', models.IntegerField(db_column='TimeUpdate')),
                ('imark', models.IntegerField(db_column='IMark', default=1)),
                ('back_up1', models.CharField(blank=True, default='1', max_length=254)),
                ('back_up2', models.IntegerField(blank=True, default=1)),
                ('back_up3', models.IntegerField(default=1)),
                ('idmanager', models.OneToOneField(db_column='IdManager', on_delete=django.db.models.deletion.CASCADE, related_name='kaoqin_related_to_user', to='polls.TCyuser')),
            ],
            options={
                'db_table': 't_cytableinfo',
            },
        ),
        migrations.CreateModel(
            name='TCyRunningaccount',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='ID', primary_key=True, serialize=False)),
                ('time', models.IntegerField(blank=True, db_column='Time')),
                ('type', models.IntegerField(blank=True, db_column='Type', default=1)),
                ('money', models.IntegerField(blank=True, db_column='Money', default=1)),
                ('param1', models.IntegerField(blank=True, db_column='Param1', default=1)),
                ('param2', models.IntegerField(blank=True, db_column='Param2', default=1)),
                ('timeupdate', models.IntegerField(blank=True, db_column='TimeUpdate')),
                ('imark', models.IntegerField(db_column='IMark', default=1)),
                ('back_up1', models.CharField(blank=True, default='1', max_length=254)),
                ('back_up2', models.IntegerField(blank=True, default=1)),
                ('back_up3', models.IntegerField(blank=True, default=1)),
                ('id_plan', models.OneToOneField(db_column='ID_Plan', on_delete=django.db.models.deletion.CASCADE, related_name='runningaccount_related_to_plan', to='polls.TCyplan')),
                ('id_user', models.OneToOneField(db_column='ID_User', on_delete=django.db.models.deletion.CASCADE, related_name='runningaccount_related_to_user_use', to='polls.TCyuser')),
                ('idmanager', models.OneToOneField(db_column='IdManager', on_delete=django.db.models.deletion.CASCADE, related_name='runningaccount_related_to_user', to='polls.TCyuser')),
            ],
            options={
                'db_table': 't_tcyrunningaccount',
            },
        ),
        migrations.AddField(
            model_name='tcyplan',
            name='id_speaker',
            field=models.OneToOneField(db_column='ID_Speaker', on_delete=django.db.models.deletion.CASCADE, related_name='plan_related_to_user_speaker', to='polls.TCyuser'),
        ),
        migrations.AddField(
            model_name='tcyplan',
            name='idmanager',
            field=models.OneToOneField(db_column='IdManager', on_delete=django.db.models.deletion.CASCADE, related_name='plan_related_to_user', to='polls.TCyuser'),
        ),
        migrations.CreateModel(
            name='TCymmx',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='ID', primary_key=True, serialize=False)),
                ('id_data', models.IntegerField(blank=True, db_column='ID_Data')),
                ('id_type', models.IntegerField(blank=True, db_column='ID_Type')),
                ('timeupdate', models.IntegerField(blank=True, db_column='TimeUpdate')),
                ('imark', models.IntegerField(db_column='IMark', default=1)),
                ('back_up1', models.CharField(blank=True, default='1', max_length=254)),
                ('back_up2', models.IntegerField(blank=True, default=1)),
                ('idmanager', models.OneToOneField(db_column='IdManager', on_delete=django.db.models.deletion.CASCADE, related_name='mmx_related_to_user', to='polls.TCyuser')),
            ],
            options={
                'db_table': 't_cymmx',
            },
        ),
        migrations.AddField(
            model_name='tcylocation',
            name='idmanager',
            field=models.OneToOneField(db_column='IdManager', on_delete=django.db.models.deletion.CASCADE, related_name='location_related_to_user', to='polls.TCyuser'),
        ),
        migrations.CreateModel(
            name='TCyequipment',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=32)),
                ('id_location_sn', models.IntegerField(blank=True, db_column='ID_Locatio_SN')),
                ('id_ip', models.CharField(blank=True, db_column='ID_IP', max_length=16)),
                ('mac', models.CharField(blank=True, db_column='MAC', max_length=24)),
                ('state', models.IntegerField(blank=True, db_column='State')),
                ('login', models.IntegerField(blank=True, db_column='Login')),
                ('link', models.IntegerField(blank=True, db_column='Link')),
                ('class_field', models.IntegerField(blank=True, db_column='Class')),
                ('dx', models.IntegerField(blank=True, db_column='Dx')),
                ('dy', models.IntegerField(blank=True, db_column='Dy')),
                ('itimebegin', models.IntegerField(blank=True, db_column='iTimeBegin')),
                ('itimelogin', models.IntegerField(blank=True, db_column='iTimeLogin')),
                ('whitelist', models.CharField(blank=True, db_column='WhiteList', max_length=1024)),
                ('rem', models.CharField(blank=True, db_column='Rem', max_length=1024)),
                ('timeupdate', models.IntegerField(blank=True, db_column='TimeUpdate')),
                ('portlisten', models.IntegerField(blank=True, db_column='PortListen')),
                ('type_field', models.IntegerField(blank=True, db_column='Type')),
                ('timedelay', models.IntegerField(blank=True, db_column='TimeDelay')),
                ('keycancel', models.IntegerField(blank=True, db_column='KeyCancel')),
                ('key0k', models.IntegerField(blank=True, db_column='Key0k')),
                ('keydel', models.IntegerField(blank=True, db_column='KeyDel')),
                ('keyf1', models.IntegerField(blank=True, db_column='KeyF1')),
                ('onall', models.IntegerField(blank=True, db_column='OnAll')),
                ('rangeequs', models.CharField(blank=True, db_column='RangeEqus', max_length=64)),
                ('listplaces', models.CharField(blank=True, db_column='ListPlaces', max_length=64)),
                ('imark', models.IntegerField(db_column='IMark', default=1)),
                ('back_up1', models.CharField(blank=True, default='1', max_length=254)),
                ('back_up2', models.IntegerField(blank=True, default=1)),
                ('back_up3', models.IntegerField(default=1)),
                ('id_location', models.OneToOneField(db_column='ID_Location', on_delete=django.db.models.deletion.CASCADE, related_name='equipment_related_to_location', to='polls.TCylocation')),
                ('id_plan', models.OneToOneField(db_column='ID_Plan', on_delete=django.db.models.deletion.CASCADE, related_name='equipment_related_to_plan', to='polls.TCyplan')),
                ('id_user', models.OneToOneField(db_column='ID_User', on_delete=django.db.models.deletion.CASCADE, related_name='equipment_related_to_user_use', to='polls.TCyuser')),
                ('idmanager', models.OneToOneField(db_column='IdManager', on_delete=django.db.models.deletion.CASCADE, related_name='equipment_related_to_user', to='polls.TCyuser')),
            ],
            options={
                'db_table': 't_cyequipment',
            },
        ),
        migrations.AddField(
            model_name='tcycurricula',
            name='id_location',
            field=models.OneToOneField(db_column='ID_Location', on_delete=django.db.models.deletion.CASCADE, related_name='curricula_related_to_location', to='polls.TCylocation'),
        ),
        migrations.AddField(
            model_name='tcycurricula',
            name='id_speaker',
            field=models.OneToOneField(db_column='ID_Speaker', on_delete=django.db.models.deletion.CASCADE, related_name='curricula_related_to_user_speaker', to='polls.TCyuser'),
        ),
        migrations.AddField(
            model_name='tcycurricula',
            name='idmanager',
            field=models.OneToOneField(db_column='IdManager', on_delete=django.db.models.deletion.CASCADE, related_name='curricula_related_to_user', to='polls.TCyuser'),
        ),
        migrations.CreateModel(
            name='TCyuserex',
            fields=[
                ('id', models.OneToOneField(db_column='ID', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='userex_related_to_user_information', serialize=False, to='polls.TCyuser')),
                ('rem', models.CharField(blank=True, db_column='Rem', max_length=32)),
                ('photo', models.BinaryField(blank=True, db_column='Photo')),
                ('timeupdate', models.IntegerField(blank=True, db_column='TimeUpdate')),
                ('imark', models.IntegerField(db_column='IMark', default=1)),
                ('photo_dataf', models.TextField(blank=True, db_column='Photo_dataF', null=True)),
                ('back_up', models.CharField(blank=True, default='1', max_length=254)),
                ('back_up2', models.IntegerField(blank=True, default=1)),
                ('back_up3', models.IntegerField(blank=True, default=1)),
                ('idmanager', models.OneToOneField(db_column='IdManager', on_delete=django.db.models.deletion.CASCADE, related_name='userex_related_to_user', to='polls.TCyuser')),
            ],
            options={
                'db_table': 't_cyuserex',
            },
        ),
        migrations.CreateModel(
            name='TCytypera',
            fields=[
                ('id', models.OneToOneField(db_column='ID', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='typera_related_to_runningaccount', serialize=False, to='polls.TCyRunningaccount')),
                ('id_parent', models.IntegerField(blank=True, db_column='ID_Parent')),
                ('name', models.CharField(blank=True, db_column='Name', max_length=32)),
                ('timeupdate', models.IntegerField(blank=True, db_column='TimeUpdate')),
                ('imark', models.IntegerField(db_column='IMark', default=1)),
                ('back_up1', models.CharField(blank=True, default='1', max_length=254)),
                ('back_up2', models.IntegerField(blank=True, default=1)),
                ('idmanager', models.OneToOneField(db_column='IdManager', on_delete=django.db.models.deletion.CASCADE, related_name='typera_related_to_user', to='polls.TCyuser')),
            ],
            options={
                'db_table': 't_cytypera',
            },
        ),
        migrations.CreateModel(
            name='TCymmxdata',
            fields=[
                ('id', models.OneToOneField(db_column='ID', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='mmxdata_related_to_mmx', serialize=False, to='polls.TCymmx')),
                ('timeupdate', models.IntegerField(blank=True, db_column='TimeUpdate')),
                ('data', models.TextField(blank=True, db_column='Data')),
                ('imark', models.IntegerField(db_column='IMark', default=1)),
                ('back_up1', models.CharField(blank=True, default='1', max_length=254)),
                ('back_up2', models.IntegerField(blank=True, default=1)),
                ('idmanager', models.OneToOneField(db_column='IdManager', on_delete=django.db.models.deletion.CASCADE, related_name='mmxdata_related_to_user', to='polls.TCyuser')),
            ],
            options={
                'db_table': 't_cymmxdata',
            },
        ),
        migrations.CreateModel(
            name='TCylocationex',
            fields=[
                ('id_location', models.OneToOneField(db_column='ID_Location', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='locationex_related_to_location', serialize=False, to='polls.TCylocation')),
                ('attr', models.IntegerField(blank=True, db_column='Attr')),
                ('datebegin', models.IntegerField(blank=True, db_column='DateBegin')),
                ('dateend', models.IntegerField(blank=True, db_column='DateEnd')),
                ('moderun', models.IntegerField(blank=True, db_column='ModeRun')),
                ('modeshangji', models.IntegerField(blank=True, db_column='ModeShangJi')),
                ('enabledelaycharged', models.IntegerField(blank=True, db_column='EnableDelayCharged')),
                ('delaycharged', models.IntegerField(blank=True, db_column='DelayCharged')),
                ('enablelimityue_sj', models.IntegerField(blank=True, db_column='EnableLimitYuE_SJ')),
                ('limityue_sj', models.IntegerField(blank=True, db_column='LimitYuE_SJ')),
                ('enablelimityue_xj', models.IntegerField(blank=True, db_column='EnableLimitYuE_XJ')),
                ('limityue_xj', models.IntegerField(blank=True, db_column='LimitYuE_XJ')),
                ('enablelimittime_xj', models.IntegerField(blank=True, db_column='EnableLimitTime_XJ')),
                ('limittime_xj', models.IntegerField(blank=True, db_column='LimitTime_XJ')),
                ('enablewarnyue', models.IntegerField(blank=True, db_column='EnableWarnYuE')),
                ('warnyue', models.IntegerField(blank=True, db_column='WarnYuE')),
                ('enablewarntime', models.IntegerField(blank=True, db_column='EnableWarnTime')),
                ('warntime', models.IntegerField(blank=True, db_column='WarnTime')),
                ('enablemincost', models.IntegerField(blank=True, db_column='EnableMinCost')),
                ('mincost', models.IntegerField(blank=True, db_column='MinCost')),
                ('price', models.IntegerField(blank=True, db_column='Price')),
                ('priceminute', models.IntegerField(blank=True, db_column='PriceMinute')),
                ('getequname', models.IntegerField(blank=True, db_column='GetEquName')),
                ('getequip', models.IntegerField(blank=True, db_column='GetEquIp')),
                ('getequmac', models.IntegerField(blank=True, db_column='GetEquMac')),
                ('timeupdate', models.IntegerField(blank=True, db_column='TimeUpdate')),
                ('imark', models.IntegerField(db_column='IMark', default=1)),
                ('back_up1', models.CharField(blank=True, default='1', max_length=254)),
                ('back_up2', models.IntegerField(blank=True, default=1)),
                ('back_up3', models.IntegerField(blank=True, default=1)),
                ('idmanager', models.OneToOneField(db_column='IdManager', on_delete=django.db.models.deletion.CASCADE, related_name='locationex_related_to_user', to='polls.TCyuser')),
            ],
            options={
                'db_table': 't_cylocationex',
            },
        ),
    ]
