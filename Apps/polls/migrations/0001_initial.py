# Generated by Django 3.2 on 2021-04-18 19:04

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='TCycurricula',
            fields=[
                ('id', models.IntegerField(db_column='ID', default=1, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', default='1', max_length=32, null=True)),
                ('timebegin', models.IntegerField(blank=True, db_column='TimeBegin', default=1, null=True)),
                ('timeend', models.IntegerField(blank=True, db_column='TimeEnd', default=1, null=True)),
                ('attr', models.SmallIntegerField(blank=True, db_column='Attr', default=1, null=True)),
                ('charge', models.SmallIntegerField(blank=True, db_column='Charge', default=1, null=True)),
                ('pwaccess', models.SmallIntegerField(blank=True, db_column='PwAccess', default=1, null=True)),
                ('pwcontinuous', models.SmallIntegerField(blank=True, db_column='PwContinuous', default=1, null=True)),
                ('pwdirection', models.SmallIntegerField(blank=True, db_column='PwDirection', default=1, null=True)),
                ('dooropen', models.SmallIntegerField(blank=True, db_column='DoorOpen', default=1, null=True)),
                ('timebegincheckbegin', models.IntegerField(blank=True, db_column='TimeBeginCheckBegin', default=1, null=True)),
                ('timebegincheckend', models.IntegerField(blank=True, db_column='TimeBeginCheckEnd', default=1, null=True)),
                ('timeendcheckbegin', models.IntegerField(blank=True, db_column='TimeEndCheckBegin', default=1, null=True)),
                ('timeendcheckend', models.IntegerField(blank=True, db_column='TimeEndCheckEnd', default=1, null=True)),
                ('rangeusers', models.CharField(blank=True, db_column='RangeUsers', default='1', max_length=1024, null=True)),
                ('listdepts', models.CharField(blank=True, db_column='ListDepts', default='1', max_length=1024, null=True)),
                ('rangeequs', models.CharField(blank=True, db_column='RangeEqus', default='1', max_length=1024, null=True)),
                ('listplaces', models.CharField(blank=True, db_column='ListPlaces', default='1', max_length=1024, null=True)),
                ('mapuser2equ', models.CharField(blank=True, db_column='MapUser2Equ', default='1', max_length=1024, null=True)),
                ('aboutspeaker', models.CharField(blank=True, db_column='AboutSpeaker', default='1', max_length=1024, null=True)),
                ('rem', models.CharField(blank=True, db_column='Rem', default='1', max_length=1024, null=True)),
                ('timeupdate', models.IntegerField(blank=True, db_column='TimeUpdate', default=1, null=True)),
                ('imark', models.SmallIntegerField(db_column='IMark', default=1, null=True)),
                ('bakc_up1', models.CharField(blank=True, default='1', max_length=254, null=True)),
                ('back_up2', models.IntegerField(blank=True, default=1, null=True)),
                ('back_up3', models.IntegerField(default=1, null=True)),
            ],
            options={
                'db_table': 't_cycurricula',
            },
        ),
        migrations.CreateModel(
            name='TCydept',
            fields=[
                ('id', models.IntegerField(db_column='ID', default=1, primary_key=True, serialize=False)),
                ('id_parent', models.IntegerField(db_column='ID_Parent', default=1, null=True)),
                ('name', models.CharField(db_column='Name', default='1', max_length=32, null=True)),
                ('timeupdate', models.IntegerField(db_column='TimeUpdate', default=1, null=True)),
                ('idmanager', models.IntegerField(db_column='IdManager', default=1, null=True)),
                ('imark', models.SmallIntegerField(db_column='IMark', default=1, null=True)),
                ('rem', models.CharField(db_column='Rem', default='1', max_length=64, null=True)),
                ('bakc_up1', models.CharField(blank=True, default='1', max_length=254, null=True)),
                ('back_up2', models.IntegerField(blank=True, default=1, null=True)),
            ],
            options={
                'db_table': 't_cydept',
            },
        ),
        migrations.CreateModel(
            name='TCylocation',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='ID', default=1, primary_key=True, serialize=False)),
                ('id_parent', models.IntegerField(blank=True, db_column='ID_Parent', default=1, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', default='1', max_length=32, null=True)),
                ('timeupdate', models.IntegerField(blank=True, db_column='TimeUpdate', default=1, null=True)),
                ('imark', models.SmallIntegerField(db_column='IMark', default=1, null=True)),
                ('rem', models.CharField(db_column='Rem', default='1', max_length=64, null=True)),
                ('back_up1', models.CharField(blank=True, default='1', max_length=254, null=True)),
                ('back_up2', models.IntegerField(blank=True, default=1, null=True)),
                ('back_up3', models.IntegerField(default=1, null=True)),
            ],
            options={
                'db_table': 't_cylocation',
            },
        ),
        migrations.CreateModel(
            name='TCyplan',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='ID', default=1, primary_key=True, serialize=False)),
                ('timebegin', models.IntegerField(blank=True, db_column='TimeBegin', default=1, null=True)),
                ('timeend', models.IntegerField(blank=True, db_column='TimeEnd', default=1, null=True)),
                ('attr', models.SmallIntegerField(blank=True, db_column='Attr', default=1, null=True)),
                ('charge', models.SmallIntegerField(blank=True, db_column='Charge', default=1, null=True)),
                ('pwaccess', models.SmallIntegerField(blank=True, db_column='PwAccess', default=1, null=True)),
                ('pwcontinuous', models.SmallIntegerField(blank=True, db_column='PwContinuous', default=1, null=True)),
                ('pwdirection', models.SmallIntegerField(blank=True, db_column='PwDirection', default=1, null=True)),
                ('dooropen', models.SmallIntegerField(blank=True, db_column='DoorOpen', default=1, null=True)),
                ('timebegincheckbegin', models.IntegerField(blank=True, db_column='TimeBeginCheckBegin', default=1, null=True)),
                ('timebegincheckend', models.IntegerField(blank=True, db_column='imeBeginCheckEnd', default=1, null=True)),
                ('timeendcheckbegin', models.IntegerField(blank=True, db_column='TimeEndCheckBegin', default=1, null=True)),
                ('timeendcheckend', models.IntegerField(blank=True, db_column='TimeEndCheckEnd', default=1, null=True)),
                ('rangeusers', models.CharField(blank=True, db_column='RangeUsers', default='1', max_length=1024, null=True)),
                ('listdepts', models.CharField(blank=True, db_column='ListDepts', default='1', max_length=1024, null=True)),
                ('rangeequs', models.CharField(blank=True, db_column='RangeEqus', default='1', max_length=1024, null=True)),
                ('listplaces', models.CharField(blank=True, db_column='ListPlaces', default='1', max_length=1024, null=True)),
                ('mapuser2equ', models.CharField(blank=True, db_column='MapUser2Equ', default='1', max_length=1024, null=True)),
                ('aboutspeaker', models.CharField(blank=True, db_column='AboutSpeaker', default='1', max_length=1024, null=True)),
                ('rem', models.CharField(blank=True, db_column='Rem', default='1', max_length=1024, null=True)),
                ('timeupdate', models.IntegerField(blank=True, db_column='TimeUpdate', default=1, null=True)),
                ('imark', models.SmallIntegerField(db_column='IMark', default=1, null=True)),
                ('back_up1', models.CharField(blank=True, default='1', max_length=254, null=True)),
                ('back_up2', models.CharField(blank=True, default='1', max_length=254, null=True)),
                ('back_up3', models.IntegerField(blank=True, default=1, null=True)),
                ('back_up4', models.IntegerField(default=1, null=True)),
                ('id_curricula', models.ForeignKey(db_column='ID_Curricula', on_delete=django.db.models.deletion.CASCADE, related_name='id_curricula', to='polls.tcycurricula')),
                ('id_location', models.ForeignKey(db_column='ID_Location', on_delete=django.db.models.deletion.CASCADE, related_name='plan_related_to_location', to='polls.tcylocation')),
            ],
            options={
                'db_table': 't_cyplan',
            },
        ),
        migrations.CreateModel(
            name='TCyuser',
            fields=[
                ('id', models.IntegerField(db_column='ID', default=1, primary_key=True, serialize=False)),
                ('nocard', models.CharField(db_column='Nocard', default='1', max_length=32, null=True)),
                ('nouser', models.CharField(db_column='NoUser', default='1', max_length=32, null=True)),
                ('name', models.CharField(db_column='Name', default='1', max_length=32, null=True)),
                ('psw', models.CharField(db_column='Psw', default='1', max_length=32, null=True)),
                ('sex', models.SmallIntegerField(db_column='Sex', default=1, null=True)),
                ('attr', models.SmallIntegerField(db_column='Attr', default=1, null=True)),
                ('attrjf', models.SmallIntegerField(db_column='AttrJf', default=1, null=True)),
                ('yue', models.IntegerField(db_column='Yue', default=1, null=True)),
                ('yue2', models.IntegerField(db_column='Yue2', default=1, null=True)),
                ('email', models.EmailField(db_column='Email', default=None, max_length=254, null=True)),
                ('phone', models.IntegerField(db_column='Phone', default=1, null=True)),
                ('timeupdate', models.IntegerField(db_column='TimeUpdate', default=1, null=True)),
                ('idmanager', models.IntegerField(blank=True, db_column='IdManager', default=1, null=True)),
                ('localid', models.CharField(db_column='LocalID', default='1', max_length=1024, null=True)),
                ('rem', models.CharField(db_column='Rem', default='1', max_length=64, null=True)),
                ('imark', models.IntegerField(db_column='IMark', default=1, null=True)),
                ('back_up1', models.CharField(blank=True, default='1', max_length=254, null=True)),
                ('back_up2', models.IntegerField(blank=True, default=1, null=True)),
                ('back_up3', models.IntegerField(default=1, null=True)),
                ('deptid', models.ForeignKey(db_column='Deptid', on_delete=django.db.models.deletion.CASCADE, related_name='related_to_department', to='polls.tcydept')),
            ],
            options={
                'db_table': 't_cyuser',
            },
        ),
        migrations.CreateModel(
            name='TCytypera',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='ID', default=1, primary_key=True, serialize=False)),
                ('id_parent', models.IntegerField(blank=True, db_column='ID_Parent', default=1, null=True)),
                ('name', models.CharField(blank=True, db_column='Name', default='1', max_length=32, null=True)),
                ('timeupdate', models.IntegerField(blank=True, db_column='TimeUpdate', default=1, null=True)),
                ('imark', models.SmallIntegerField(db_column='IMark', default=1, null=True)),
                ('rem', models.CharField(db_column='Rem', default='1', max_length=64, null=True)),
                ('back_up1', models.CharField(blank=True, default='1', max_length=254, null=True)),
                ('back_up2', models.IntegerField(blank=True, default=1, null=True)),
                ('idmanager', models.ForeignKey(db_column='IdManager', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='typera_related_to_user', to='polls.tcyuser')),
            ],
            options={
                'db_table': 't_cytypera',
            },
        ),
        migrations.CreateModel(
            name='TCyTableInfo',
            fields=[
                ('id', models.IntegerField(db_column='ID', default=1, primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', default='1', max_length=50, null=True)),
                ('nametable', models.CharField(db_column='NameTable', default='1', max_length=50, null=True)),
                ('timeupdate', models.IntegerField(db_column='TimeUpdate', default=1, null=True)),
                ('rem', models.CharField(db_column='Rem', default='1', max_length=64, null=True)),
                ('imark', models.SmallIntegerField(db_column='IMark', default=1, null=True)),
                ('back_up1', models.CharField(blank=True, default='1', max_length=254, null=True)),
                ('back_up2', models.IntegerField(blank=True, default=1, null=True)),
                ('back_up3', models.IntegerField(default=1, null=True)),
                ('idmanager', models.ForeignKey(db_column='IdManager', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='kaoqin_related_to_user', to='polls.tcyuser')),
            ],
            options={
                'db_table': 't_cytableinfo',
            },
        ),
        migrations.CreateModel(
            name='TCyRunningaccount',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='ID', default=1, primary_key=True, serialize=False)),
                ('time', models.IntegerField(blank=True, db_column='Time', default=1, null=True)),
                ('type_field', models.SmallIntegerField(blank=True, db_column='Type', default=1, null=True)),
                ('money', models.IntegerField(blank=True, db_column='Money', default=1, null=True)),
                ('param1', models.IntegerField(blank=True, db_column='Param1', default=1, null=True)),
                ('timeupdate', models.IntegerField(blank=True, db_column='TimeUpdate', default=1, null=True)),
                ('imark', models.SmallIntegerField(db_column='IMark', default=1, null=True)),
                ('rem', models.CharField(db_column='Rem', default='1', max_length=64, null=True)),
                ('back_up1', models.CharField(blank=True, default='1', max_length=254, null=True)),
                ('back_up2', models.IntegerField(blank=True, default=1, null=True)),
                ('back_up3', models.IntegerField(blank=True, default=1, null=True)),
                ('id_user', models.ForeignKey(db_column='ID_User', on_delete=django.db.models.deletion.CASCADE, related_name='runningaccount_related_to_user_use', to='polls.tcyuser')),
                ('idmanager', models.ForeignKey(db_column='IdManager', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='runningaccount_related_to_user', to='polls.tcyuser')),
                ('param2', models.ForeignKey(db_column='Param2', on_delete=django.db.models.deletion.CASCADE, related_name='runningaccount_related_to_plan', to='polls.tcyplan')),
            ],
            options={
                'db_table': 't_cyrunningaccount',
            },
        ),
        migrations.AddField(
            model_name='tcyplan',
            name='id_speaker',
            field=models.ForeignKey(db_column='ID_Speaker', on_delete=django.db.models.deletion.CASCADE, related_name='plan_related_to_user_speaker', to='polls.tcyuser'),
        ),
        migrations.AddField(
            model_name='tcyplan',
            name='idmanager',
            field=models.ForeignKey(db_column='IdManager', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='plan_related_to_user', to='polls.tcyuser'),
        ),
        migrations.CreateModel(
            name='TCymmx',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='ID', default=1, primary_key=True, serialize=False)),
                ('id_data', models.IntegerField(blank=True, db_column='ID_Data', default=1, null=True)),
                ('id_type', models.SmallIntegerField(blank=True, db_column='ID_Type', default=1, null=True)),
                ('timeupdate', models.IntegerField(blank=True, db_column='TimeUpdate', default=1, null=True)),
                ('imark', models.SmallIntegerField(db_column='IMark', default=1, null=True)),
                ('rem', models.CharField(db_column='Rem', default='1', max_length=64, null=True)),
                ('back_up1', models.CharField(blank=True, default='1', max_length=254, null=True)),
                ('back_up2', models.IntegerField(blank=True, default=1, null=True)),
                ('idmanager', models.ForeignKey(db_column='IdManager', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mmx_related_to_user', to='polls.tcyuser')),
            ],
            options={
                'db_table': 't_cymmx',
            },
        ),
        migrations.AddField(
            model_name='tcylocation',
            name='idmanager',
            field=models.ForeignKey(db_column='IdManager', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='location_related_to_user', to='polls.tcyuser'),
        ),
        migrations.CreateModel(
            name='TCyequipment',
            fields=[
                ('id', models.IntegerField(blank=True, db_column='ID', default=1, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='Name', default='1', max_length=32, null=True)),
                ('id_location_sn', models.SmallIntegerField(blank=True, db_column='ID_Location_SN', default=1, null=True)),
                ('id_ip', models.CharField(blank=True, db_column='ID_IP', default='1', max_length=16, null=True)),
                ('mac', models.CharField(blank=True, db_column='MAC', default='1', max_length=24, null=True)),
                ('state', models.SmallIntegerField(blank=True, db_column='State', default=1, null=True)),
                ('login', models.SmallIntegerField(blank=True, db_column='Login', default=1, null=True)),
                ('link', models.SmallIntegerField(blank=True, db_column='Link', default=1, null=True)),
                ('class_field', models.SmallIntegerField(blank=True, db_column='Class', default=1, null=True)),
                ('dx', models.IntegerField(blank=True, db_column='Dx', default=1, null=True)),
                ('dy', models.IntegerField(blank=True, db_column='Dy', default=1, null=True)),
                ('id_plan', models.IntegerField(blank=True, db_column='ID_Plan', default=1, null=True)),
                ('itimebegin', models.IntegerField(blank=True, db_column='iTimeBegin', default=1, null=True)),
                ('itimelogin', models.IntegerField(blank=True, db_column='iTimeLogin', default=1, null=True)),
                ('whitelist', models.CharField(blank=True, db_column='WhiteList', default='1', max_length=1024, null=True)),
                ('rem', models.CharField(blank=True, db_column='Rem', default='1', max_length=1024, null=True)),
                ('timeupdate', models.IntegerField(blank=True, db_column='TimeUpdate', default=1, null=True)),
                ('portlisten', models.IntegerField(blank=True, db_column='PortListen', default=1, null=True)),
                ('type_field', models.IntegerField(blank=True, db_column='Type', default=1, null=True)),
                ('timedelay', models.IntegerField(blank=True, db_column='TimeDelay', default=1, null=True)),
                ('keycancel', models.SmallIntegerField(blank=True, db_column='KeyCancel', default=1, null=True)),
                ('keyOk', models.SmallIntegerField(blank=True, db_column='KeyOk', default=1, null=True)),
                ('keydel', models.SmallIntegerField(blank=True, db_column='KeyDel', default=1, null=True)),
                ('keyf1', models.SmallIntegerField(blank=True, db_column='KeyF1', default=1, null=True)),
                ('onall', models.SmallIntegerField(blank=True, db_column='OnAll', default=1, null=True)),
                ('rangeequs', models.CharField(blank=True, db_column='RangeEqus', default='1', max_length=64, null=True)),
                ('listplaces', models.CharField(blank=True, db_column='ListPlaces', default='1', max_length=64, null=True)),
                ('imark', models.SmallIntegerField(db_column='IMark', default=1, null=True)),
                ('back_up1', models.CharField(blank=True, default='1', max_length=254, null=True)),
                ('back_up2', models.IntegerField(blank=True, default=1, null=True)),
                ('back_up3', models.IntegerField(default=1, null=True)),
                ('id_location', models.ForeignKey(db_column='ID_Location', on_delete=django.db.models.deletion.CASCADE, related_name='equipment_related_to_location', to='polls.tcylocation')),
                ('id_user', models.ForeignKey(db_column='ID_User', on_delete=django.db.models.deletion.CASCADE, related_name='equipment_related_to_user_use', to='polls.tcyuser')),
                ('idmanager', models.ForeignKey(db_column='IdManager', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='equipment_related_to_user', to='polls.tcyuser')),
            ],
            options={
                'db_table': 't_cyequipment',
            },
        ),
        migrations.AddField(
            model_name='tcycurricula',
            name='id_location',
            field=models.ForeignKey(db_column='ID_Location', on_delete=django.db.models.deletion.CASCADE, related_name='curricula_related_to_location', to='polls.tcylocation'),
        ),
        migrations.AddField(
            model_name='tcycurricula',
            name='id_speaker',
            field=models.ForeignKey(db_column='ID_Speaker', on_delete=django.db.models.deletion.CASCADE, related_name='curricula_related_to_user_speaker', to='polls.tcyuser'),
        ),
        migrations.AddField(
            model_name='tcycurricula',
            name='idmanager',
            field=models.ForeignKey(db_column='IdManager', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='curricula_related_to_user', to='polls.tcyuser'),
        ),
        migrations.CreateModel(
            name='TCyuserex',
            fields=[
                ('id', models.OneToOneField(db_column='ID', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='userex_related_to_user_information', serialize=False, to='polls.tcyuser')),
                ('photo', models.BinaryField(blank=True, db_column='FaceFearture')),
                ('timeupdate', models.IntegerField(blank=True, db_column='TimeUpdate', default=1, null=True)),
                ('imark', models.IntegerField(db_column='IMark', default=1, null=True)),
                ('rem', models.CharField(db_column='Rem', default='1', max_length=64, null=True)),
                ('back_up1', models.CharField(blank=True, default='1', max_length=254, null=True)),
                ('back_up2', models.IntegerField(blank=True, default=1, null=True)),
                ('back_up3', models.IntegerField(blank=True, default=1, null=True)),
                ('idmanager', models.ForeignKey(db_column='IdManager', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userex_related_to_user', to='polls.tcyuser')),
            ],
            options={
                'db_table': 't_cyuserex',
            },
        ),
        migrations.CreateModel(
            name='TCymmxdata',
            fields=[
                ('id', models.OneToOneField(db_column='ID', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='mmxdata_related_to_mmx', serialize=False, to='polls.tcymmx')),
                ('timeupdate', models.IntegerField(blank=True, db_column='TimeUpdate', default=1, null=True)),
                ('data', models.TextField(blank=True, db_column='Data')),
                ('imark', models.SmallIntegerField(db_column='IMark', default=1, null=True)),
                ('rem', models.CharField(db_column='Rem', default='1', max_length=64, null=True)),
                ('back_up1', models.CharField(blank=True, default='1', max_length=254, null=True)),
                ('back_up2', models.IntegerField(blank=True, default=1, null=True)),
                ('idmanager', models.ForeignKey(db_column='IdManager', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mmxdata_related_to_user', to='polls.tcyuser')),
            ],
            options={
                'db_table': 't_cymmxdata',
            },
        ),
        migrations.CreateModel(
            name='TCylocationex',
            fields=[
                ('id_location', models.OneToOneField(db_column='ID_Location', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='locationex_related_to_location', serialize=False, to='polls.tcylocation')),
                ('attr', models.SmallIntegerField(blank=True, db_column='Attr', default=1, null=True)),
                ('datebegin', models.IntegerField(blank=True, db_column='DateBegin', default=1, null=True)),
                ('dateend', models.IntegerField(blank=True, db_column='DateEnd', default=1, null=True)),
                ('moderun', models.IntegerField(blank=True, db_column='ModeRun', default=1, null=True)),
                ('modeshangji', models.IntegerField(blank=True, db_column='ModeShangJi', default=1, null=True)),
                ('enabledelaycharged', models.IntegerField(blank=True, db_column='EnableDelayCharged', default=1, null=True)),
                ('delaycharged', models.IntegerField(blank=True, db_column='DelayCharged', default=1, null=True)),
                ('enablelimityue_sj', models.IntegerField(blank=True, db_column='EnableLimitYuE_SJ', default=1, null=True)),
                ('limityue_sj', models.IntegerField(blank=True, db_column='LimitYuE_SJ', default=1, null=True)),
                ('enablelimityue_xj', models.IntegerField(blank=True, db_column='EnableLimitYuE_XJ', default=1, null=True)),
                ('limityue_xj', models.IntegerField(blank=True, db_column='LimitYuE_XJ', default=1, null=True)),
                ('enablelimittime_xj', models.IntegerField(blank=True, db_column='EnableLimitTime_XJ', default=1, null=True)),
                ('limittime_xj', models.IntegerField(blank=True, db_column='LimitTime_XJ', default=1, null=True)),
                ('enablewarnyue', models.IntegerField(blank=True, db_column='EnableWarnYuE', default=1, null=True)),
                ('warnyue', models.IntegerField(blank=True, db_column='WarnYuE', default=1, null=True)),
                ('enablewarntime', models.IntegerField(blank=True, db_column='EnableWarnTime', default=1, null=True)),
                ('warntime', models.IntegerField(blank=True, db_column='WarnTime', default=1, null=True)),
                ('enablemincost', models.IntegerField(blank=True, db_column='EnableMinCost', default=1, null=True)),
                ('mincost', models.IntegerField(blank=True, db_column='MinCost', default=1, null=True)),
                ('price', models.IntegerField(blank=True, db_column='Price', default=1, null=True)),
                ('priceminute', models.IntegerField(blank=True, db_column='PriceMinute', default=1, null=True)),
                ('getequname', models.IntegerField(blank=True, db_column='GetEquName', default=1, null=True)),
                ('getequip', models.IntegerField(blank=True, db_column='GetEquIp', default=1, null=True)),
                ('getequmac', models.IntegerField(blank=True, db_column='GetEquMac', default=1, null=True)),
                ('timeupdate', models.IntegerField(blank=True, db_column='TimeUpdate', default=1, null=True)),
                ('imark', models.SmallIntegerField(db_column='IMark', default=1, null=True)),
                ('rem', models.CharField(db_column='Rem', default='1', max_length=64, null=True)),
                ('back_up1', models.CharField(blank=True, default='1', max_length=254, null=True)),
                ('back_up2', models.IntegerField(blank=True, default=1, null=True)),
                ('back_up3', models.IntegerField(blank=True, default=1, null=True)),
                ('idmanager', models.ForeignKey(db_column='IdManager', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='locationex_related_to_user', to='polls.tcyuser')),
            ],
            options={
                'db_table': 't_cylocationex',
            },
        ),
    ]
